#include <iostream>
#include <cmath>
#include <conio.h>
#include <string>
#include <iomanip>

using namespace std;
double percentage(double x, double y){ //let x be the average and y be the percentage in decimals
	double p;
	p = x*y;
	return p;}
double average(double d, double t){ // let d be the score and t be the maximum score
	double s;
	s = (d/t)*100.0;
	return s;}

int main()
{
	string studlist[50]; //there will be a list of 50 names
	int b, a; //for looping

	double q1[50], q2[50], q3[50], q4[50], q5[50], q6[50], q7[50], q8[50], q9[50], qTot[50], qAve[50] = {0.00}; //q means quizzes
	double p1[50], p2[50], p3[50], p4[50], p5[50], p6[50], p7[50], p8[50], p9[50], pTot[50];// p means pretests
	double s1[50], s2[50], s3[50], sTot[50]; //s means prob sets
	double prelims[50], finals[50];
	double actTot[50], actAve[50] = {0.00};
	double rQ[50] = {0.00}, rA[50] = {0.00}, rPre[50] = {0.00}, rFin[50] = {0.00}, rEx[50]= {0.00}, GPA[50]= {0.00}, trans[50]= {0.00};

	string fp("Pass or Fail"); //string that will change into "pass" or "fail" depending on the if else statement later
	bool abort; //determines whether the program will stop or continue

	cout << "THIS IS A PROGRAM THAT LETS YOU COMPUTE THE GRADES OF THE STUDENTS" << endl;
	cout << "Enter the names of your 50 students:" <<endl;

		for (b=0; b<50; b++) //this will prompt the user to input 50 names 
		{getline(cin, studlist[b]);} //this will store the entire characters along the line, including the spaces

	cout << endl << "ENTER SCORES FOR EACH STUDENT:"<< endl;
		a = 0; //for looping init
		do //looping
		{
			cout << endl << "ENTER THE SCORES OF " << studlist[a] << ": " <<endl;
			cout << "Scores in quizzes 1-9 respectively: (Maximum score is 50 only)" << endl; //prompts user to input quiz grades
			cout << "//Warning: Program will exit if input is greater than maximum score//" <<endl;
			cin >>q1[a] >> q2[a] >> q3[a] >> q4[a] >> q5[a] >> q6[a] >> q7[a] >> q8[a] >> q9[a]; 

			if (q1[a] <= 50 && q2[a] <= 50 && q3[a] <= 50 && q4[a] <= 50 && q5[a] <= 50 && q6[a] <= 50 && q7[a] <= 50 && q8[a] <= 50 && q9[a] <= 50) //if the scores are greater than the maximum score for quizzes, program will exit
			{
				cout << "Scores in pre-tests 1-9 respectively: (Maximum score is 100 only)" << endl; //prompts user to input pretest grades
				cout << "//Warning: Program will exit if input is greater than maximum score//" <<endl;
				cin >>p1[a] >> p2[a] >> p3[a] >> p4[a] >> p5[a] >> p6[a] >> p7[a] >> p8[a] >> p9[a];

				if (p1[a]<=100 && p2[a] <=100 && p3[a] <=100 && p4[a] <=100 && p5[a] <=100 && p6[a] <=100 && p7[a] <=100 && p8[a] <=100 && p9[a] <=100) //if the scores are greater than the maximum score for pretests, program will exit
				{
					cout << "Scores in problem sets 1-3 respectively: (Maximum score is 150 only)" << endl; //prompts user to input probset grades
					cout << "//Warning: Program will exit if input is greater than maximum score//" <<endl;
					cin >> s1[a] >> s2[a] >> s3[a];	

					if (s1[a] <=150 && s2[a] <=150 && s3[a] <=150) //if the scores are greater than the maximum score for prob sets, program will exit
					{
						cout << "Score in preliminary exam: (Maximum score is 100 only)" << endl; //prompts the user to input prelim grade
						cout << "//Warning: Program will exit if input is greater than maximum score//" <<endl;
						cin >> prelims[a];

						if (prelims[a] <=100) //if the scores are greater than the maximum score for prelim exam, program will exit
						{
							cout << "Score in final exam: (Maximum score is 100 only)" << endl;//prompts user to input final exam grade
							cout << "//Warning: Program will exit if input is greater than maximum score//" <<endl;
							cin >> finals[a];

							//Start of output of grades
							if (finals[a] <=100){//if the scores are greater than the maximum score for final exam, program will exit
							
								qTot[a] = q1[a] + q2[a] + q3[a] + q4[a] + q5[a] + q6[a] + q7[a] + q8[a] +q9[a]; //total quizzes score
								qAve[a] = average(qTot[a],450); // average score of quizzes
								rQ[a] = percentage(qAve[a], 0.30); //raw grade for quizzes

								pTot[a] = p1[a] + p2[a] + p3[a] + p4[a] + p5[a] + p6[a] + p7[a] + p8[a] + p9[a]; //total pretest score
								sTot[a] = s1[a] + s2[a] + s3[a]; //total probset score
								actTot[a] = pTot[a] + sTot[a]; // total activities score since they both have the same percentage
								actAve[a] = average(actTot[a],1350); //average score of activities
								rA[a] = percentage(actAve[a], 0.15); // raw grade for activities

								rPre[a] = percentage(prelims[a], 0.25); // raw grade for prelim exam
								rFin[a] = percentage(finals[a], 0.30); // raw grade for final exam
								rEx[a] = rPre[a] + rFin[a]; // total raw grade for major exams

								GPA[a] = rQ[a] + rA[a] + rEx[a]; //TOTAL RAW GRADE

							if (GPA[a]>=95.57 && GPA[a]<=100){ //condition for flat uno
								trans[a] = 1.00;}
							else if (GPA[a]>=91.12 && GPA[a]<=95.56){ //condition for 1.25
								trans[a] = 1.25;}
							else if (GPA[a]>=86.68 && GPA[a]<=91.11){ //condition for 1.50
								trans[a] = 1.50;}
							else if (GPA[a]>=82.23 && GPA[a]<=86.67){//condition for 1.75
								trans[a] = 1.75;}
							else if (GPA[a]>=77.79 && GPA[a]<=82.22){//condition for 2.00
								trans[a] = 2.00;}
							else if (GPA[a]>=73.34 && GPA[a]<=77.78){//condition for 2.25
								trans[a] = 2.25;}
							else if (GPA[a]>=68.90 && GPA[a]<=73.33){//condition for 2.50
								trans[a] = 2.50;}
							else if (GPA[a]>=64.45 && GPA[a]<=68.89){//condition for 2.75
								trans[a] = 2.75;}
							else if (GPA[a]>=60.00 && GPA[a]<=64.44){//condition for tres
								trans[a] = 3.00;}
							else{//condition for singko
								trans[a] = 5.00;}

							if (GPA[a]>=60.00){ //condition if the string will change to "pass"
								fp.replace(0, 12, "Pass");}
							else if (GPA[a] < 60.00){ //condition if the string wil change to "fail"
								fp.replace(0, 12, "Fail");}	

								cout << endl << "Name: " << studlist[a] << endl; //displays the name
								cout << "Raw Quizzes      " << "Raw Activities     " << "Raw Exams     " << "GPA   " << "Transmuted   " << "Pass or Fail" <<endl;
								cout.width(7); cout << setprecision(2) << fixed << rQ[a] << "   ";  //displays raw quiz grade
								cout.width(15); cout << setprecision(2) << fixed << rA[a] << "   "; //displays raw actitivites grade
								cout.width(13); cout << setprecision(2) << fixed << rEx[a]<< "   "; //displays raw exams grade
								cout.width(10); cout << setprecision(2) << fixed << GPA[a]; //displays raw GPA grade
								cout.width(11); cout << trans[a]; //displays transmuted grade
								cout.width(11); cout << fp << endl << endl; //outputs the string of pass or fail
								abort = false;//continues the program
							//End of output of grades 

							}else{cout << "Invalid input. The maximum score for final exam is 100 only."; abort=true;} //stops the program}
						}else{cout << "Invalid input. The maximum score for preliminary exam is 100 only."; abort=true;} //stops the program}
					}else{ cout << "Invalid input. The maximum score for each problem set is 150 only.";abort=true;} //stops the program}
				}else{cout << "Invalid input. The maximum score per pre-tests is 100 only.";abort=true;}//stops the program}
			}else{cout << "Invalid input. The maximum score per quiz is 50 only.";abort=true;} //stops the program}
			a++;
		}while(a<50 && !abort); //the loop will continue as long as 'a' is less than 50 and abort is not 'true'

		int i = 0; //loop initialize
		while(i<49){
			int j = 0;
			while (j <49-i){ 
				if (GPA[j] < GPA[j+1]){//bubble sort loop to compare every succeeding two values of GPA
					double temp = GPA[j];
					GPA[j] = GPA[j+1];
					GPA[j+1] = temp;

					string temporary = studlist[j]; //bubble sort loop for the string of student names so that it will move alongside with their sorted GPA
					studlist[j] = studlist[j+1];
					studlist[j+1] = temporary;
				}++j;
			}++i;
		}

		cout << "\n TOP 10 PERFORMING STUDENTS AND THEIR RESPECTIVE RAW GPA:\n"; //loop for output of top 10 students
		for (a=0; a<10; ++a){
		cout << a+1 << ") " << studlist[a] << ": " << GPA[a] <<endl; }

	_getch();
	return 0;
}
